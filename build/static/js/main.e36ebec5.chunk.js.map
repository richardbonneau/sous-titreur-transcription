{"version":3,"sources":["_Redux/Actions/data.js","_Redux/Actions/media.js","Components/SubtitleCard.js","Sections/SubtitlesEditor.js","Utils/CustomSegmentMarker.js","Components/Waveform.js","Sections/Timeline.js","Components/Titlebar.js","Components/VideoPlayer.js","Sections/VideoSection.js","App.js","reportWebVitals.js","_Redux/Reducers/index.js","_Redux/Reducers/data.js","_Redux/Reducers/media.js","_Redux/store.js","index.js"],"names":["DATA_REQUEST","DATA_SUCCESS","MODIFY_SINGLE_CAPTION","ADD_NEW_CAPTION","DELETE_CAPTION","CURRENTLY_SELECTED","MODIFY_MULTIPLE_CAPTIONS","CURRENT_TIME","modifySingleCaption","newCaption","subIndex","type","deleteCaption","selectSub","SEEKING","VERTICAL_ZOOM","HORIZONTAL_ZOOM","seeking","seekingTime","Container","styled","div","SubtitleNumber","TimeContainer","InputContainer","CharactersContainer","SubtitleCard","subData","openDeleteCaptionDialog","dispatch","useDispatch","scrollTo","useRef","useState","shiftDown","setShiftDown","startTime","setStartTime","endTime","setEndTime","subtitleText","setSubtitleText","charactersPerLine","setCharactersPerLine","subtitles","useSelector","state","data","present","currentlySelected","useEffect","characterCount","lines","map","line","length","linesToString","join","Date","start","toISOString","substr","end","current","scrollIntoView","behavior","timestampToSeconds","timestamp","hhmmss","split","setNewTime","newStartTime","newEndTime","startInput","endInput","minStart","maxEnd","isNaN","timeKeyUp","event","key","ref","elevation","Elevation","ONE","style","border","onClick","className","icon","value","onKeyUp","onChange","e","target","onBlur","onKeyDown","preventDefault","oldCaption","selectionStart","addNewCaption","newLines","num","i","DialogContent","SubtitlesEditor","deleteSubDialog","setDeleteSubDialog","subtitleToDelete","setSubtitleToDelete","onClose","title","isOpen","intent","DefaultSegmentMarker","options","draggable","this","_options","createSegmentMarker","prototype","init","group","handleX","startMarker","xPosition","time","segment","_label","window","Konva","Text","x","y","text","layer","formatTime","fontFamily","fontSize","fontStyle","fill","textAlign","hide","_handle","Rect","width","height","color","stroke","strokeWidth","_caption","_id","attributes","label","_line","Line","add","fitToView","bindEventHandlers","self","setTimeout","resizeCaption","attrs","dragBoundFunc","pos","_segmentShapes","getStartMarker","endMarker","getEndMarker","rightNeighbour","bounds","min","max","leftNeighbour","getX","getWidth","setX","_segment","_setEndTime","_view","pixelsToTime","getFrameOffset","_marker","_setStartTime","newDragBoundFunc","defineBounds","segmentShape","caption","_group","children","setWidth","draw","getHeight","points","timeUpdated","setText","SpinnerContainer","Waveform","peaksReady","setPeaksReady","peaksUrl","verticalZoom","media","horizontalZoom","peaks","zoomviewWaveformRef","overviewWaveformRef","audioElementRef","subtitlesRef","currentlySelectedRef","initPeaks","views","getView","setAmplitudeScale","zoom","setZoom","segments","removeAll","createSegmentsFromSubtitles","allSegments","getSegments","forEach","sub","toUpgrade","update","index","editable","id","visibleMarkers","document","querySelector","containers","overview","zoomview","mediaElement","dataUri","arraybuffer","zoomLevels","keyboard","logger","console","error","bind","randomizeSegmentColor","zoomWaveformColor","segmentColor","segmentStartMarkerColor","segmentEndMarkerColor","overviewHighlightColor","emitCueEvents","Peaks","err","initializedPeaks","on","playheadEntersSegment","segmentsDragEnd","seg","isStartMarker","neighbourIndex","neighbour","_peaks","_segmentsById","modifiedSubtitles","newSubtitle","push","_startTime","newCaptions","Timeline","Titlebar","toasts","setToasts","identifiant","ident","currentTime","useHotkeys","log","sendSubtitlesToAPI","fetch","headers","Accept","method","body","JSON","stringify","then","res","json","Group","align","Alignment","LEFT","Heading","RIGHT","outlined","url","location","href","navigator","clipboard","writeText","message","timeout","onDismiss","VideoPlayer","playbackSpeed","player","isPlaying","videoUrl","pause","play","enableOnTags","subscribeToStateChange","paused","videoElement","video","textTracks","mode","track","addTextTrack","cueEn","VTTCue","addCue","seek","playbackRate","aspectRatio","src","VideoController","Controls","Shortcuts","VideoSection","setPlaybackSpeed","verticalZoomSlider","setVerticalZoomSlider","horizontalZoomSlider","setHorizontalZoomSlider","search","setSearch","lastSearchedIndex","setLastSearchedIndex","ActionCreators","clearHistory","undo","redo","class","selected","foundIndex","toLowerCase","startSearch","labelValues","stepSize","onRelease","newValue","newZoom","TopSections","App","splittedUrl","receiveData","includes","Number","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","undoable","isFetching","vttFile","waveformData","action","waveform","videolink","waveformobj","newSubtitles","cap","originalSubStartTime","originalSubEndTime","splitTime","oldSub","newSub","splice","filter","limit","excludeAction","store","createStore","rootReducer","undefined","composeWithDevTools","ReactDOM","render","getElementById"],"mappings":"0OAAaA,EAAe,eACfC,EAAe,eAEfC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAqB,qBACrBC,EAA2B,2BAC3BC,EAAe,eAsBfC,EAAsB,SAACC,EAAYC,GAC9C,MAAO,CACLC,KAAMT,EACNQ,WACAD,eAoBSG,EAAgB,SAACF,GAC5B,MAAO,CACLC,KAAMP,EACNM,aAISG,EAAY,SAACH,GACxB,MAAO,CACLC,KAAMN,EACNK,aC/DSI,EAAU,UACVC,EAAgB,gBAChBC,EAAkB,kBAMlBC,EAAU,SAACC,GACtB,MAAO,CACLP,KAAMG,EACNI,gB,iDCAEC,EAAYC,IAAOC,IAAV,+RAgBTC,EAAiBF,IAAOC,IAAV,gHAMdE,EAAgBH,IAAOC,IAAV,oQAgBbG,EAAiBJ,IAAOC,IAAV,8MAYdI,EAAsBL,IAAOC,IAAV,6CAiJVK,I,IAAAA,EA7If,YAAuE,IAA/ChB,EAA8C,EAA9CA,SAAUiB,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,wBACnCC,EAAWC,cACXC,EAAWC,mBAFmD,EAGlCC,oBAAS,GAHyB,mBAG7DC,EAH6D,KAGlDC,EAHkD,OAIlCF,mBAAS,IAJyB,mBAI7DG,EAJ6D,KAIlDC,EAJkD,OAKtCJ,mBAAS,IAL6B,mBAK7DK,EAL6D,KAKpDC,EALoD,OAM5BN,mBAAS,IANmB,mBAM7DO,EAN6D,KAM/CC,EAN+C,OAOlBR,mBAAS,IAPS,mBAO7DS,EAP6D,KAO1CC,EAP0C,KAS9DC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQJ,aAEtDK,EAAoBJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQC,qBAEpEC,qBACE,WACE,IAAMC,EAAiBxB,EAAQyB,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKC,UACxDZ,EAAqBQ,GAErB,IAAMK,EAAgB7B,EAAQyB,MAAMK,KAAK,MACzChB,EAAgBe,GAChBnB,EAAa,IAAIqB,KAAqB,IAAhB/B,EAAQgC,OAAcC,cAAcC,OAAO,GAAI,KACrEtB,EAAW,IAAImB,KAAmB,IAAd/B,EAAQmC,KAAYF,cAAcC,OAAO,GAAI,OAEnE,CAACjB,IAGHM,qBAAU,WACJD,IAAsBvC,GAAUqB,EAASgC,QAAQC,eAAe,CAAEC,SAAU,aAC/E,CAAChB,IAEJ,IAAMiB,EAAqB,SAACC,GAC1B,IAAMC,EAASD,EAAUE,MAAM,KAE/B,OAD4B,KAAZD,EAAO,GAAwB,GAAZA,EAAO,KAAWA,EAAO,IAIxDE,EAAa,WACjB,IAMIC,EAMAC,EAZEC,EAAaP,EAAmB9B,GAChCsC,EAAWR,EAAmB5B,GAE9BqC,EAAWjE,EAAW,EAAIkC,EAAUlC,EAAW,GAAGoD,IAAM,EACxDc,EAASlE,EAAWkC,EAAUW,OAAS,EAAIX,EAAUlC,EAAW,GAAGiD,MAAQ,KAI1BY,EAAnDE,EAAaE,GAAYF,EAAa9C,EAAQmC,IAAoBW,EAC7DA,EAAa9C,EAAQmC,IAAoBnC,EAAQmC,IACtCa,EAIlBH,EADEE,EAAWE,GAAUF,EAAW/C,EAAQgC,MAC7Be,EACJA,EAAW/C,EAAQgC,MACfhC,EAAQgC,MACHiB,EAEpB,IAAInE,EAAU,eAAQkB,GAGjBkD,MAAMN,KAAe9D,EAAWkD,MAAQY,GACxCM,MAAML,KAAa/D,EAAWqD,IAAMU,GAEzC3C,EAASrB,EAAoBC,EAAYC,KASrCoE,EAAY,SAACC,GACC,UAAdA,EAAMC,KAAiBV,KAiB7B,OACE,cAACnD,EAAD,CAAW8D,IAAKlD,EAAhB,SACE,eAAC,IAAD,CACEmD,UAAWC,IAAUC,IACrBC,MAAOpC,IAAsBvC,EAAW,CAAE4E,OAAQ,mBAAsB,GACxEC,QAAS,WACP1D,EAAShB,EAAUH,IACnBmB,EAASZ,EAAQU,EAAQgC,MAAM,QALnC,UAQE,eAACpC,EAAD,WACE,cAACD,EAAD,UAAiBZ,EAAW,IAC5B,sBAAK8E,UAAU,UAAf,UACE,cAAC,IAAD,CAAMC,KAAM,yBACZ,uBACEC,MAAOtD,EACPuD,QAASb,EACTc,SAAU,SAACC,GAAD,OAAOxD,EAAawD,EAAEC,OAAOJ,QACvCK,OAAQzB,OAGZ,sBAAKkB,UAAU,UAAf,UACE,cAAC,IAAD,CAAMC,KAAM,wBACZ,uBACEC,MAAOpD,EACPqD,QAASb,EACTc,SAAU,SAACC,GAAD,OAAOtD,EAAWsD,EAAEC,OAAOJ,QACrCK,OAAQzB,UAId,cAAC9C,EAAD,UACE,0BACEwE,UA/CM,SAACjB,GACf,IAAMvB,EAAgB7B,EAAQyB,MAAMK,KAAK,MACzC,GAAkB,UAAdsB,EAAMC,IAAiB7C,GAAa,QACnC,GAAKD,GAA2B,UAAd6C,EAAMC,IAKJ,cAAdD,EAAMC,KAAwC,KAAjBxC,GAAqBX,EAASjB,EAAcF,QALtC,CAC5CqE,EAAMkB,iBACN,IAAMC,EAAa1C,EAAcK,OAAO,EAAGkB,EAAMe,OAAOK,gBAAgB9B,MAAM,MACxE5D,EAAa+C,EAAcK,OAAOkB,EAAMe,OAAOK,gBAAgB9B,MAAM,MAC3ExC,EFvGuB,SAACqE,EAAYzF,EAAYC,GACpD,MAAO,CACLC,KAAMR,EACN+F,aACAxF,WACAD,cEkGW2F,CAAcF,EAAYzF,EAAYC,MAyCzCiF,QAtCI,SAACZ,GACK,UAAdA,EAAMC,KAAiB7C,GAAa,IAsChCxB,KAAK,OACLiF,SAAU,SAACC,GAAD,OAAOpD,EAAgBoD,EAAEC,OAAOJ,QAC1CK,OA7DQ,WAChB,IAAIM,EAAW7D,EAAa6B,MAAM,MAC9B5D,EAAU,2BAAQkB,GAAR,IAAiByB,MAAOiD,IACtCxE,EAASrB,EAAoBC,EAAYC,KA2DjCgF,MAAOlD,MAGX,cAACf,EAAD,UACGiB,EAAkBW,KAAI,SAACiD,EAAKC,GAAN,OACrB,8BAAuBD,GAAb,OAASC,QAGvB,cAAC,IAAD,CAAMd,KAAK,QAAQF,QAAS,kBAAM3D,EAAwBlB,YClM5DS,EAAYC,IAAOC,IAAV,4IAQTmF,EAAgBpF,IAAOC,IAAV,qLA2DJoF,I,IAAAA,EAjDf,WACE,IAAM5E,EAAWC,cADQ,EAEqBG,oBAAS,GAF9B,mBAElByE,EAFkB,KAEDC,EAFC,OAGuB1E,mBAAS,MAHhC,mBAGlB2E,EAHkB,KAGAC,EAHA,KAInBjE,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQJ,aAEtDhB,EAA0B,SAAClB,GAC/BmG,EAAoBnG,GACpBiG,GAAmB,IAErB,OACE,eAAC,EAAD,WACG/D,EAAUS,KAAI,SAAC1B,EAAS4E,GAAV,OACb,cAAC,EAAD,CACE7F,SAAU6F,EACV5E,QAASA,EAETC,wBAAyBA,GADpB,MAAQ2E,MAKjB,cAAC,IAAD,CACEd,KAAK,YACLqB,QAAS,kBAAMH,GAAmB,IAClCI,MAAM,0BACNC,OAAQN,EAJV,SAME,eAACF,EAAD,WACE,0FACA,gCACE,cAAC,IAAD,CACES,OAAO,UACP1B,QAAS,WACPoB,GAAmB,GACnB9E,EAASjB,EAAcgG,KAJ3B,iBASA,cAAC,IAAD,CAAQK,OAAO,SAAS1B,QAAS,kBAAMoB,GAAmB,IAA1D,6B,kBChEZ,SAASO,EAAqBC,GAE5BA,EAAQC,WAAY,EACpBC,KAAKC,SAAWH,EAmNX,SAASI,EAAoBJ,GAClC,OAAO,IAAID,EAAqBC,GAjNlCD,EAAqBM,UAAUC,KAAO,SAAUC,GAE9C,IAEIC,EAAUN,KAAKC,SAASM,YAAc,GAFxB,GAIdC,EAAYR,KAAKC,SAASM,aAAe,GAAK,GAE9CE,EAAOT,KAAKC,SAASM,YACrBP,KAAKC,SAASS,QAAQ3F,UACtBiF,KAAKC,SAASS,QAAQzF,QAG1B+E,KAAKW,OAAS,IAAIC,OAAOC,MAAMC,KAAK,CAClCC,EAAGP,EACHQ,EAAG,EACHC,KAAMjB,KAAKC,SAASiB,MAAMC,WAAWV,GACrCW,WAAYpB,KAAKC,SAASmB,WAC1BC,SAAUrB,KAAKC,SAASoB,SACxBC,UAAWtB,KAAKC,SAASqB,UACzBC,KAAM,OACNC,UAAW,WAGbxB,KAAKW,OAAOc,OAIZzB,KAAK0B,QAAU,IAAId,OAAOC,MAAMc,KAAK,CACnCZ,EAAGT,EACHU,EAAG,EACHY,MA7BgB,GA8BhBC,OA7BiB,GA8BjBN,KAAMvB,KAAKC,SAAS6B,MACpBC,OAAQ/B,KAAKC,SAAS6B,MACtBE,YAAa,IAKfhC,KAAKiC,SAAW,IAAIrB,OAAOC,MAAMC,KAAK,CACpCC,EAAGP,EAAY,GACfQ,EAAG,GACHC,KAAMjB,KAAKC,SAASS,QAAQwB,IAAM,EAAI,KAAOlC,KAAKC,SAASS,QAAQyB,WAAWC,MAC9EhB,WAAYpB,KAAKC,SAASmB,WAC1BC,SAAUrB,KAAKC,SAASoB,SACxBC,UAAWtB,KAAKC,SAASqB,UACzBC,KAAM,OACNC,UAAW,SAKbxB,KAAKqC,MAAQ,IAAIzB,OAAOC,MAAMyB,KAAK,CACjCvB,EAAG,EACHC,EAAG,EACHe,OAAQ/B,KAAKC,SAAS6B,MACtBE,YAAa,IAGf3B,EAAMkC,IAAIvC,KAAKW,QACfN,EAAMkC,IAAIvC,KAAKqC,OACfhC,EAAMkC,IAAIvC,KAAK0B,SACX1B,KAAKC,SAASM,aAAaF,EAAMkC,IAAIvC,KAAKiC,UAE9CjC,KAAKwC,YACLxC,KAAKyC,kBAAkBpC,IAGzBR,EAAqBM,UAAUsC,kBAAoB,SAAUpC,GAC3D,IAAIqC,EAAO1C,KA6CX2C,YAAW,WACTD,EAAKE,gBA8DT,SAAsBF,EAAMrC,GAC1BA,EAAMwC,MAAMC,cAlDd,SAA0BJ,GACxB,OAAO,SAAUK,GACfL,EAAKE,gBACL,IAAIrC,EAAcmC,EAAKzC,SAASiB,MAAM8B,eACpCN,EAAKzC,SAASS,QAAQwB,KACtBe,iBACEC,EAAYR,EAAKzC,SAASiB,MAAM8B,eAAeN,EAAKzC,SAASS,QAAQwB,KAAKiB,eAE1EC,EAAiBV,EAAKzC,SAASiB,MAAM8B,eAAeN,EAAKzC,SAASS,QAAQwB,IAAM,GAEhFmB,EAAS,CAAEC,IAAK,EAAGC,IAAK,MAE5B,GAAIb,EAAKzC,SAASM,YAAa,CAC7B,IAAIiD,EAAgBd,EAAKzC,SAASiB,MAAM8B,eAAeN,EAAKzC,SAASS,QAAQwB,IAAM,GAC/EgB,IAAWG,EAAOE,IAAML,EAAUO,OAASP,EAAUQ,YACrDF,IACFH,EAAOC,IAAME,EAAcP,iBAAiBQ,OAExCD,EAAcL,eAAeM,QAAUV,EAAIhC,GAAKgC,EAAIhC,EAAIsC,EAAOC,MACjEE,EAAcL,eAAeQ,KAAKZ,EAAIhC,GAEtCyC,EAAcI,SAASC,YACrBL,EAAcM,MAAMC,aAAaP,EAAcM,MAAME,iBAAmBjB,EAAIhC,IAE9EyC,EAAcL,eAAec,QAAQrB,uBAIrCrC,IAAa8C,EAAOC,IAAM/C,EAAYkD,OAASlD,EAAYmD,YAC3DN,IACFC,EAAOE,IAAMH,EAAeD,eAAeM,OAEvCL,EAAeH,iBAAiBQ,QAAUV,EAAIhC,GAAKgC,EAAIhC,EAAIsC,EAAOE,MACpEH,EAAeH,iBAAiBU,KAAKZ,EAAIhC,GACzCqC,EAAeQ,SAASM,cACtBd,EAAeU,MAAMC,aAAaX,EAAeU,MAAME,iBAAmBjB,EAAIhC,IAGhFqC,EAAeH,iBAAiBgB,QAAQrB,kBAI9C,MAAO,CACL7B,EAAGgC,EAAIhC,EAAIsC,EAAOE,IAAMF,EAAOE,IAAMR,EAAIhC,EAAIsC,EAAOC,IAAMD,EAAOC,IAAMP,EAAIhC,EAC3EC,EAAG,IAMqBmD,CAAiBzB,GA9D3C0B,CAAa1B,EAAMrC,KAElB,KA+DLR,EAAqBM,UAAUyC,cAAgB,WAE7C,IAAMyB,EAAerE,KAAKC,SAASiB,MAAM8B,eAAehD,KAAKC,SAASS,QAAQwB,KAE9E,GAAImC,EAAJ,CAEA,IAAI9D,EAAc8D,EAAapB,iBAC3BC,EAAYmB,EAAalB,eACzBmB,EAAU/D,EAAYgE,OAAOC,SAAS,GACtCF,GAASA,EAAQG,SAASvB,EAAUO,OAASlD,EAAYkD,OAAS,IACtEzD,KAAKC,SAASiB,MAAMwD,SAGtB7E,EAAqBM,UAAUqC,UAAY,WACzC,IAAIX,EAAS7B,KAAKC,SAASiB,MAAMyD,YAEjC3E,KAAKW,OAAOK,EAAEa,EAAS,EAAI,GAC3B7B,KAAK0B,QAAQV,EAAEa,EAAS,EAAI,MAE5B7B,KAAKqC,MAAMuC,OAAO,CAAC,GAAK,EAAG,GAAK/C,KAGlChC,EAAqBM,UAAU0E,YAAc,SAAUpE,GACrDT,KAAKW,OAAOmE,QAAQ9E,KAAKC,SAASiB,MAAMC,WAAWV,KCzMrD,IAAM3G,EAAYC,IAAOC,IAAV,uiBAwBT+K,EAAmBhL,IAAOC,IAAV,0HAuNPgL,I,EAAAA,GA/Mf,WACE,IAAMxK,EAAWC,cADC,EAGkBG,oBAAS,GAH3B,mBAGXqK,EAHW,KAGCC,EAHD,KAKZC,EAAW3J,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQwJ,YACrDC,EAAe5J,aAAY,SAACC,GAAD,OAAWA,EAAM4J,MAAMD,gBAClDE,EAAiB9J,aAAY,SAACC,GAAD,OAAWA,EAAM4J,MAAMC,kBACpD1J,EAAoBJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQC,qBAC9DL,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQJ,aAEtDgK,EAAQ5K,mBACR6K,EAAsB7K,mBACtB8K,EAAsB9K,mBACtB+K,EAAkB/K,mBAClBgL,EAAehL,mBACfiL,EAAuBjL,mBAG7BkB,qBACE,WACMsJ,GAAUU,MAEhB,CAACV,IAGHtJ,qBACE,WACM0J,EAAM7I,SACS6I,EAAM7I,QAAQoJ,MAAMC,QAAQ,YACpCC,kBAAkBZ,KAG/B,CAACA,IAGHvJ,qBACE,WACM0J,EAAM7I,UACR6I,EAAM7I,QAAQuJ,KAAKC,QAAQZ,GAC3BC,EAAM7I,QAAQyJ,SAASC,YACvBC,OAGJ,CAACf,IAGHzJ,qBACE,WACE8J,EAAajJ,QAAUnB,IAEzB,CAACA,IAGHM,qBACE,WACE+J,EAAqBlJ,QAAUd,IAEjC,CAACA,IAGHC,qBACE,WACE,GAAI0J,EAAM7I,QAAS,CACjB,IAAI4J,EAAcf,EAAM7I,QAAQyJ,SAASI,cAErCD,EAAYpK,SAAWX,EAAUW,OACnCmK,IAEA9K,EAAUiL,SAAQ,SAACC,EAAKvH,GAEtB,IAAIwH,EAAY,KACZD,EAAInK,QAAUgK,EAAYpH,GAAGnE,UAAW2L,EAAY,CAAE3L,UAAW0L,EAAInK,OAChEmK,EAAIhK,MAAQ6J,EAAYpH,GAAGjE,QAASyL,EAAY,CAAEzL,QAASwL,EAAIhK,KAC/DgK,EAAI1K,MAAMK,KAAK,QAAUkK,EAAYpH,GAAGiD,WAAWC,QAC1DsE,EAAY,CAAEvE,WAAY,CAAEC,MAAOqE,EAAI1K,MAAMK,KAAK,SAGhDsK,GACFJ,EAAYpH,GAAGyH,OAAOD,SAShC,CAACnL,IAGH,IAAM8K,EAA8B,WAClCd,EAAM7I,QAAQyJ,SAASC,YACvBb,EAAM7I,QAAQyJ,SAAS5D,IACrBhH,EAAUS,KAAI,SAACyK,EAAKG,GAClB,MAAO,CACL7L,UAAW0L,EAAInK,MACfrB,QAASwL,EAAIhK,IACboK,UAAU,EACVC,GAAIF,EACJzE,WAAY,CACVC,MAAOqE,EAAI1K,MAAMK,KAAK,MACtB2K,gBAAgB,SASpBlB,EAAY,WAChBH,EAAgBhJ,QAAUsK,SAASC,cAAc,sBAEjD,IAAMnH,EAAU,CACdoH,WAAY,CACVC,SAAU1B,EAAoB/I,QAC9B0K,SAAU5B,EAAoB9I,SAEhC2K,aAAc3B,EAAgBhJ,QAC9B4K,QAAS,CACPC,YAAapC,GAEfqC,WAAY,CAAC,IAAK,IAAK,KAAM,KAAM,MACnCC,UAAU,EACVC,OAAQC,QAAQC,MAAMC,KAAKF,SAC3BG,uBAAuB,EACvBC,kBAAmB,UACnBC,aAAc,UACdC,wBAAyB,UACzBC,sBAAuB,UACvBC,uBAAwB,OACxBC,eAAe,EACfvG,OAAQ,KAGVwG,IAAMjI,KAAKN,GAAS,SAACwI,EAAKC,GACpBD,GAAKX,QAAQC,MAAM,MAAOU,GAC9B/C,EAAM7I,QAAU6L,EAEhBA,EAAiBzI,QAAQI,oBAAsBA,EAE/CqI,EAAiBC,GAAG,iBAAkBC,GACtCF,EAAiBC,GAAG,mBAAoBE,GAIxCrC,IACAnB,GAAc,OAIZwD,EAAkB,SAACC,EAAKC,GAC5B,IAAIC,EAAiBD,EAAgBD,EAAI7B,GAAK,EAAI6B,EAAI7B,GAAK,EAEvDgC,EAAYH,EAAII,OAAO5C,SAAS6C,cAAcH,GAE9CI,EAAoB,GAExB,GAAIH,EACF,GAAIF,GACF,GAAIE,EAAU7N,QAAU0K,EAAajJ,QAAQmM,GAAgBpM,IAAK,CAChE,IAAIyM,EAAW,eAAQvD,EAAajJ,QAAQmM,IAC5CK,EAAYzM,IAAMqM,EAAU7N,QAC5BgO,EAAkBE,KAAK,CAAE/P,WAAY8P,EAAatC,MAAOiC,UAG3D,GAAIC,EAAU/N,UAAY4K,EAAajJ,QAAQmM,GAAgBvM,MAAO,CACpE,IAAI4M,EAAW,eAAQvD,EAAajJ,QAAQmM,IAE5CK,EAAY5M,MAAQwM,EAAU/N,UAC9BkO,EAAkBE,KAAK,CAAE/P,WAAY8P,EAAatC,MAAOiC,IAK/D,IAAIK,EAAW,eAAQvD,EAAajJ,QAAQiM,EAAI7B,KAEhDoC,EAAY5M,MAAQqM,EAAIS,WACxBF,EAAYzM,IAAMkM,EAAI1N,QACtBgO,EAAkBE,KAAK,CAAE/P,WAAY8P,EAAatC,MAAO+B,EAAI7B,KAE7DtM,ELzLK,CACLlB,KAAML,EACNoQ,YKuL+BJ,KAG3BR,EAAwB,SAAC/H,GACzBA,EAAQoG,KAAOlB,EAAqBlJ,SAASlC,EAAShB,EAAUkH,EAAQoG,MAQ9E,OACE,eAAC,EAAD,YACI7B,GACA,cAACF,EAAD,UACE,cAAC,IAAD,MAGJ,qBAAK5G,UAAU,qBAAqBP,IAAK4H,IACzC,qBAAKrH,UAAU,qBAAqBP,IAAK6H,QC9OzC3L,GAAYC,IAAOC,IAAV,gIAiBAsP,I,GAAAA,GARf,WACE,OACE,cAAC,GAAD,UACE,cAAC,GAAD,O,kBCZAxP,GAAYC,IAAOC,IAAV,mQAkFAuP,I,GAAAA,GAlEf,WAAqB,IAAD,EACU3O,mBAAS,IADnB,mBACX4O,EADW,KACHC,EADG,KAEZC,EAAclO,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQgO,SACxDpO,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQJ,aACtDqO,EAAcpO,aAAY,SAACC,GAAD,OAASA,EAAMC,KAAKC,QAAQiO,eAE5DC,aAAW,UAAU,SAACrL,GACpBA,EAAEI,iBACF+I,QAAQmC,IAAI,aACZC,OAEFF,aAAW,aAAa,SAACrL,GACvBA,EAAEI,iBACF+I,QAAQmC,IAAI,gBACZC,OAGF,IAAMA,EAAqB,WACzBC,MAAM,gDAAiD,CACrDC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEX,MAAOD,EAAanO,gBAE1CgP,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACH,GACLzC,QAAQmC,IAAIM,OAiBlB,OACE,eAAC,GAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAOM,MAAR,CAAcC,MAAOC,KAAUC,KAA/B,SACE,cAAC,IAAOC,QAAR,6BAEF,eAAC,IAAOJ,MAAR,CAAcC,MAAOC,KAAUG,MAA/B,UACE,cAAC,IAAD,CAAQC,UAAU,EAAM5M,KAAK,SAAS6C,KAAK,WAAW/C,QApBrC,WACvB,IAAM+M,EAAMrK,OAAOsK,SAASC,KAAKnO,MAAM,UAAU,GACjDoO,UAAUC,UAAUC,UAApB,UAAiCL,EAAjC,iBAA6CrB,IAC7CH,EAAU,CACR,cAAC,IAAD,CACE8B,QAAQ,+CACRC,QAAS,IACTC,UAAW,kBAAMhC,EAAU,KAC3B7J,OAAO,iBAaL,cAAC,IAAD,CACEoL,UAAU,EACV5M,KAAK,cACL6C,KAAK,cACL/C,QAAS6L,UAIf,cAAC,IAAD,UAAUP,Q,uCC5EV1P,GAAYC,IAAOC,IAAV,kJA+DA0R,I,YAAAA,GAtDf,YAAyC,IAAlBC,EAAiB,EAAjBA,cACfnR,EAAWC,cACXmR,EAASjR,mBACTkR,EAAYlR,mBAEZmR,EAAWtQ,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQmQ,YACrDvQ,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQJ,aACtD1B,EAAc2B,aAAY,SAACC,GAAD,OAAWA,EAAM4J,MAAMxL,eAqCvD,OAnCAgQ,aAAW,cAAc,kBAAOgC,EAAUnP,QAAUkP,EAAOlP,QAAQqP,QAAUH,EAAOlP,QAAQsP,SAAQ,CAACC,aAAa,CAAC,cAEnHpQ,qBAAU,WACR+P,EAAOlP,QAAQwP,wBAAuB,SAACzQ,GRyChB,IAACgF,EQxClBoL,EAAUnP,WAAajB,EAAM0Q,SAAQN,EAAUnP,SAAWjB,EAAM0Q,QACpE3R,GRuCsBiG,EQvCDhF,EAAMmO,YRwCxB,CACLtQ,KAAMJ,EACNuH,eQxCC,IAEH5E,qBAAU,WACR,GAAI+P,EAAOlP,QAAS,CAClB,IADkB,EACd0P,EAAeR,EAAOlP,QAAQ2P,MAAMA,MADtB,eAIAD,EAAaE,YAJb,IAIlB,2BAA2C,SACnCC,KAAO,YALG,8BASlB,IAAMC,EAAQJ,EAAaK,aAAa,YACxCD,EAAMD,KAAO,UACbhR,EAAUiL,SAAQ,SAACC,GACjB,IAAMiG,EAAQ,IAAIC,OAAOlG,EAAInK,MAAOmK,EAAIhK,IAAKgK,EAAI1K,MAAMK,KAAK,OAC5DoQ,EAAMI,OAAOF,SAGhB,CAACnR,IAEJM,qBAAU,WACY,IAAhBhC,GAAmB+R,EAAOlP,QAAQmQ,KAAKhT,KAC1C,CAACA,IAEJgC,qBAAU,WACR+P,EAAOlP,QAAQoQ,aAAenB,IAC7B,CAACA,IAEF,cAAC,GAAD,UACE,eAAC,UAAD,CAAQ/N,IAAKgO,EAAQmB,YAAY,OAAjC,UACE,wBAAQC,IAAKlB,IACb,cAAC,cAAD,UCxDFhS,GAAYC,IAAOC,IAAV,gJAQTiT,GAAkBlT,IAAOC,IAAV,yWAyBfkT,GAAWnT,IAAOC,IAAV,2FAKRmT,GAAYpT,IAAOC,IAAV,+RA+HAoT,I,MAAAA,GA9Gf,WACE,IAAM5S,EAAWC,cADK,EAEoBG,mBAAS,GAF7B,mBAEf+Q,EAFe,KAEA0B,EAFA,OAG8BzS,mBAAS,GAHvC,mBAGf0S,EAHe,KAGKC,EAHL,OAIkC3S,mBAAS,GAJ3C,mBAIf4S,EAJe,KAIOC,EAJP,OAK8B7S,oBAAS,GALvC,gCAMMA,mBAAS,KANf,mBAMf8S,EANe,KAMPC,EANO,OAO4B/S,oBAAU,GAPtC,mBAOfgT,EAPe,KAOIC,EAPJ,KAQhBtS,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAAQJ,aAuB5D,OAtBaC,aAAY,SAAAC,GAAK,OAAEkM,QAAQmC,IAAIrO,MAE5CI,qBAAU,WACRrB,EAASsT,kBAAeC,kBACxB,IAmBA,eAAC,GAAD,WACE,cAAC,GAAD,CAAapC,cAAeA,IAC5B,eAACuB,GAAD,WACE,eAACD,GAAD,WACE,eAAC,IAAD,CAAO9O,UAAU,YAAjB,uBAAoC,cAAC,IAAD,CAAQC,KAAK,OAAOF,QAAS,WAC/DyJ,QAAQmC,IAAI,gBACZtP,EAASsT,kBAAeE,cAE1B,eAAC,IAAD,CAAO7P,UAAU,YAAjB,oBAAoC,cAAC,IAAD,CAAQC,KAAK,OAAOF,QAAS,kBAAI1D,EAASsT,kBAAeG,cAC7F,eAAC,IAAD,qBAEE,qBAAKC,MAAM,uBAAX,SACE,yBAAQ3P,SAAU,SAACC,GAAD,OAAO6O,EAAiB7O,EAAEC,OAAOJ,QAAnD,UACE,wBAAQA,MAAO,GAAf,kBACA,wBAAQ8P,UAAQ,EAAC9P,MAAO,EAAxB,gBAGA,wBAAQA,MAAO,IAAf,0BAIN,8BACE,eAAC,IAAD,uBAEE,wBACA,uBACEA,MAAOqP,EACPnP,SAAU,SAACC,GACTmP,EAAUnP,EAAEC,OAAOJ,OACnBwP,GAAsB,IAExBvP,QAAS,SAACE,GAAD,MAAkB,UAAVA,EAAEb,IAhDb,WAClB,IAAIyQ,EACJ7S,EAAUiL,SAAQ,SAACC,EAAKvH,IAEnBkP,GACDlP,EAAI0O,IACiE,IAArEnH,EAAI1K,MAAMK,KAAK,MAAMiS,cAAcX,OAAOA,EAAOW,iBAEjDD,EAAalP,EACb2O,EAAqB3O,OAGpBkP,GAAYP,GAAsB,GACvCrT,EAAShB,EAAU4U,IAmC8BE,GAAgB,aAK3D,eAAC,IAAD,2BAEE,cAAC,IAAD,CACEhL,IAAK,EACLC,IAAK,EACLgL,YAAa,GACbC,SAAU,EACVC,UAAW,SAACC,GAAD,OAAclU,ER1H9B,CACLlB,KAAMI,EACNiV,QQwHyDD,EAAW,KAC1DnQ,SAAU,SAACmQ,GAAD,OAAcnB,EAAsBmB,IAC9CrQ,MAAOiP,OAGX,eAAC,IAAD,6BAEE,cAAC,IAAD,CACEhK,IAAK,EACLC,IAAK,EACLgL,YAAa,GACbC,SAAU,EACVC,UAAW,SAACC,GAAD,OAAclU,ERhI9B,CACLlB,KAAMK,EACNgV,QQ8H2DD,KACjDnQ,SAAU,SAACmQ,GAAD,OAAcjB,EAAwBiB,IAChDrQ,MAAOmP,UAIb,eAACL,GAAD,WACE,gCACG,IACD,qBAAKhP,UAAU,iBAAf,sCACA,qBAAKA,UAAU,eAAf,8BAGF,gCACE,qBAAKA,UAAU,iBAAf,iEACA,qBAAKA,UAAU,eAAf,sDC3JNrE,GAAYC,IAAOC,IAAV,kCAGT4U,GAAc7U,IAAOC,IAAV,kKAqDF6U,OA1Cf,WACE,IAAMrU,EAAWC,cA2BjB,OA1BAoB,qBAAU,WACR,IAAMiT,EAAclO,OAAOsK,SAASC,KAAKnO,MAAM,KACzC2M,EAAQmF,EAAYA,EAAY5S,OAAO,GAC7CyL,QAAQmC,IAAI,UAAUH,GAEtBnP,EVpBK,CACLlB,KAAMX,IUoBNqR,MAAM,+CAAgD,CACpDC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEX,YAEtBY,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACH,GAGL,GAFAzC,QAAQmC,IAAI,OAAOM,GACnB5P,EV3BmB,SAACkB,GAC1B,MAAO,CACLpC,KAAMV,EACN8C,QUwBaqT,CAAY,2BAAK3E,EAAK1O,MAAX,IAAgBiO,YACjC/I,OAAOsK,SAASC,KAAK6D,SAAS,UAAU,CACzC,IAAMF,EAAclO,OAAOsK,SAASC,KAAKnO,MAAM,UACzCyD,EAAOwO,OAAOH,EAAY,IAChCtU,EAASZ,EAAQ6G,UAGtB,IAGD,eAAC,GAAD,WACE,cAAC,GAAD,IACA,eAACmO,GAAD,WACG,IACD,cAAC,EAAD,IACA,cAAC,GAAD,OAGF,cAAC,GAAD,QCjDSM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7E,MAAK,YAAkD,IAA/C8E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCDCO,8BAAgB,CAC7BhU,KAAKiU,MCKQ,WAaT,IAZJlU,EAYG,uDAZK,CACNmU,YAAY,EACZjG,MAAM,GACNxE,SAAU,KACV2G,SAAU,KACVvQ,UAAW,GACXsU,QAAS,KACTjU,kBAAmB,KACnBgO,YAAY,EACZkG,aAAa,IAEfC,EACG,uCAEH,OADApI,QAAQmC,IAAI,cAAciG,EAAOzW,MACzByW,EAAOzW,MACb,KAAKX,EACH,OAAO,2BACF8C,GADL,IAEEmU,YAAY,IAEhB,KAAKhX,EACH,OAAO,2BACF6C,GADL,IAEEmU,YAAY,EACZzK,SAAU4K,EAAOrU,KAAKsU,SACtBlE,SAAUiE,EAAOrU,KAAKuU,UACtB1U,UAAWwU,EAAOrU,KAAKH,UACvBoO,MAAOoG,EAAOrU,KAAKiO,MACnBmG,aAAcC,EAAOrU,KAAKwU,cAE9B,KAAKrX,EACH,IAAIsX,EAAY,aAAO1U,EAAMF,WAE7B,OADA4U,EAAaJ,EAAO1W,UAAY0W,EAAO3W,WAChC,2BAAKqC,GAAZ,IAAmBF,UAAW4U,IAGhC,KAAKlX,EACH,IAAIkX,EAAY,aAAO1U,EAAMF,WAI7B,OAHAwU,EAAO1G,YAAY7C,SAAQ,SAAC4J,GAC1BD,EAAaC,EAAIxJ,OAASwJ,EAAIhX,cAEzB,2BAAKqC,GAAZ,IAAmBF,UAAW4U,IAGhC,KAAKrX,EACH,IAAIqX,EAAY,aAAO1U,EAAMF,WACvB8U,EAAuBF,EAAaJ,EAAO1W,UAAUiD,MACrDgU,EAAqBH,EAAaJ,EAAO1W,UAAUoD,IAErD8T,EAAY,EACuEA,EAApF9U,EAAMmO,YAAcyG,GAAwB5U,EAAMmO,YAAc0G,EAAgC7U,EAAMmO,aACvF0G,EAAqBD,GAAwB,EAAIA,EAEnE,IAAIG,EAAS,CACXlU,MAAO6T,EAAaJ,EAAO1W,UAAUiD,MACrCG,IAAI8T,EACJxU,MAAOgU,EAAOlR,YAGZ4R,EAAS,CACXnU,MAAMiU,EACN9T,IAAK6T,EACLvU,MAAOgU,EAAO3W,YAMhB,OAHA+W,EAAaJ,EAAO1W,UAAYmX,EAChCL,EAAaO,OAAOX,EAAO1W,SAAW,EAAG,EAAGoX,GAErC,2BAAKhV,GAAZ,IAAmBF,UAAW4U,IAGhC,KAAKpX,EACH,IAAIoX,EAAe1U,EAAMF,UAAUoV,QAAO,SAAClK,EAAKvH,GAAN,OAAYA,IAAM6Q,EAAO1W,YAEnE,OAAO,2BAAKoC,GAAZ,IAAmBF,UAAW4U,IAGhC,KAAKnX,EACH,OAAO,2BACFyC,GADL,IAEEG,kBAAmBmU,EAAO1W,WAE5B,KAAKH,EACH,OAAO,2BACFuC,GADL,IAEEmO,YAAamG,EAAOtP,OAE1B,QACE,OAAOhF,KD9FS,CAClBmV,MAAO,GACPD,OAAOE,yBAAc,CAAC,eAAe,yBAEvCxL,METa,WAQT,IAPJ5J,EAOG,uDAPK,CACN5B,YAAa,EACbyL,eAAgB,EAChBF,aAAc,EACdwE,YAAa,GAEfmG,EACG,uCACH,OAAQA,EAAOzW,MACb,KAAKG,EACH,OAAO,2BACFgC,GADL,IAEE5B,YAAakW,EAAOlW,cAExB,KAAKH,EACH,OAAO,2BACF+B,GADL,IAEE2J,aAAc2K,EAAOpB,UAEzB,KAAKhV,EACH,OAAO,2BACF8B,GADL,IAEE6J,eAAgByK,EAAOpB,UAI3B,QACE,OAAOlT,M,UCxBEqV,GAFDC,uBAAYC,QAAaC,EAAWC,kC,4BCQlDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEF9J,SAASqK,eAAe,SAM1BnC,O","file":"static/js/main.e36ebec5.chunk.js","sourcesContent":["export const DATA_REQUEST = \"DATA_REQUEST\";\r\nexport const DATA_SUCCESS = \"DATA_SUCCESS\";\r\nexport const DATA_FAILURE = \"DATA_FAILURE\";\r\nexport const MODIFY_SINGLE_CAPTION = \"MODIFY_SINGLE_CAPTION\";\r\nexport const ADD_NEW_CAPTION = \"ADD_NEW_CAPTION\";\r\nexport const DELETE_CAPTION = \"DELETE_CAPTION\";\r\nexport const CURRENTLY_SELECTED = \"CURRENTLY_SELECTED\";\r\nexport const MODIFY_MULTIPLE_CAPTIONS = \"MODIFY_MULTIPLE_CAPTIONS\";\r\nexport const CURRENT_TIME = \"CURRENT_TIME\"\r\n\r\nexport const requestData = () => {\r\n  return {\r\n    type: DATA_REQUEST,\r\n  };\r\n};\r\n\r\nexport const receiveData = (data) => {\r\n  return {\r\n    type: DATA_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const dataError = (error) => {\r\n  return {\r\n    type: DATA_FAILURE,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const modifySingleCaption = (newCaption, subIndex) => {\r\n  return {\r\n    type: MODIFY_SINGLE_CAPTION,\r\n    subIndex,\r\n    newCaption,\r\n  };\r\n};\r\n\r\nexport const modifyMultipleCaption = (newCaptions) => {\r\n  return {\r\n    type: MODIFY_MULTIPLE_CAPTIONS,\r\n    newCaptions\r\n  };\r\n};\r\n\r\nexport const addNewCaption = (oldCaption, newCaption, subIndex) => {\r\n  return {\r\n    type: ADD_NEW_CAPTION,\r\n    oldCaption,\r\n    subIndex,\r\n    newCaption,\r\n  };\r\n};\r\n\r\nexport const deleteCaption = (subIndex) => {\r\n  return {\r\n    type: DELETE_CAPTION,\r\n    subIndex,\r\n  };\r\n};\r\n\r\nexport const selectSub = (subIndex) => {\r\n  return {\r\n    type: CURRENTLY_SELECTED,\r\n    subIndex,\r\n  };\r\n};\r\n\r\n\r\nexport const currentTime = (time) => {\r\n  return {\r\n    type: CURRENT_TIME,\r\n    time,\r\n  };\r\n};\r\n","export const PLAY_PAUSE = \"PLAY_PAUSE\";\r\nexport const SEEKING = \"SEEKING\";\r\nexport const VERTICAL_ZOOM = \"VERTICAL_ZOOM\";\r\nexport const HORIZONTAL_ZOOM = \"HORIZONTAL_ZOOM\";\r\nexport const IS_SEEKING = \"IS_SEEKING\";\r\n\r\n\r\n\r\n\r\nexport const seeking = (seekingTime) => {\r\n  return {\r\n    type: SEEKING,\r\n    seekingTime,\r\n  };\r\n};\r\nexport const verticalZoom = (newZoom) => {\r\n  return {\r\n    type: VERTICAL_ZOOM,\r\n    newZoom,\r\n  };\r\n};\r\nexport const horizontalZoom = (newZoom) => {\r\n  return {\r\n    type: HORIZONTAL_ZOOM,\r\n    newZoom,\r\n  };\r\n};\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, Elevation, Icon } from \"@blueprintjs/core\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  modifySingleCaption,\r\n  seeking,\r\n  addNewCaption,\r\n  deleteCaption,\r\n  selectSub,\r\n} from \"../_Redux/Actions\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0.01em;\r\n  .bp3-card {\r\n    display: flex;\r\n    margin: 5px;\r\n  }\r\n  .bp3-icon-trash {\r\n    width: 3em;\r\n    display: flex;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    margin: -2em -2em 0 0;\r\n    padding: 1em;\r\n    height: 45px;\r\n  }\r\n`;\r\nconst SubtitleNumber = styled.div`\r\n  font-size: 1.3em;\r\n  opacity: 0.4;\r\n  padding-bottom: 0.5em;\r\n  cursor: pointer;\r\n`;\r\nconst TimeContainer = styled.div`\r\n  width: 110px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .subtime {\r\n    opacity: 0.5;\r\n    display: flex;\r\n  }\r\n  input {\r\n    padding-right: 1em;\r\n    border: none;\r\n  }\r\n  input:focus {\r\n    border: 1px solid black;\r\n  }\r\n`;\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  textarea {\r\n    height: 100%;\r\n    width: 99%;\r\n    text-align: center;\r\n    resize: none;\r\n    border: none;\r\n  }\r\n`;\r\nconst CharactersContainer = styled.div`\r\n  opacity: 0.5;\r\n`;\r\n\r\nfunction SubtitleCard({ subIndex, subData, openDeleteCaptionDialog }) {\r\n  const dispatch = useDispatch();\r\n  const scrollTo = useRef();\r\n  const [shiftDown, setShiftDown] = useState(false);\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [subtitleText, setSubtitleText] = useState(\"\");\r\n  const [charactersPerLine, setCharactersPerLine] = useState([]);\r\n\r\n  const subtitles = useSelector((state) => state.data.present.subtitles);\r\n\r\n  const currentlySelected = useSelector((state) => state.data.present.currentlySelected);\r\n\r\n  useEffect(\r\n    function incomingSubtitles() {\r\n      const characterCount = subData.lines.map((line) => line.length);\r\n      setCharactersPerLine(characterCount);\r\n\r\n      const linesToString = subData.lines.join(\"\\n\");\r\n      setSubtitleText(linesToString);\r\n      setStartTime(new Date(subData.start * 1000).toISOString().substr(11, 12));\r\n      setEndTime(new Date(subData.end * 1000).toISOString().substr(11, 12));\r\n    },\r\n    [subtitles]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentlySelected === subIndex) scrollTo.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [currentlySelected]);\r\n\r\n  const timestampToSeconds = (timestamp) => {\r\n    const hhmmss = timestamp.split(\":\");\r\n    const seconds = hhmmss[0] * 3600 + hhmmss[1] * 60 + +hhmmss[2];\r\n    return seconds;\r\n  };\r\n\r\n  const setNewTime = () => {\r\n    const startInput = timestampToSeconds(startTime);\r\n    const endInput = timestampToSeconds(endTime);\r\n\r\n    const minStart = subIndex > 0 ? subtitles[subIndex - 1].end : 0;\r\n    const maxEnd = subIndex < subtitles.length - 1 ? subtitles[subIndex + 1].start : 9999;\r\n\r\n    let newStartTime;\r\n\r\n    if (startInput > minStart && startInput < subData.end) newStartTime = startInput;\r\n    else if (startInput > subData.end) newStartTime = subData.end;\r\n    else newStartTime = minStart;\r\n\r\n    let newEndTime;\r\n    if (endInput < maxEnd && endInput > subData.start) {\r\n      newEndTime = endInput;\r\n    } else if (endInput < subData.start) {\r\n      newEndTime = subData.start;\r\n    } else newEndTime = maxEnd;\r\n\r\n    let newCaption = { ...subData };\r\n\r\n    //If the user enters an invalid time, the value here would be NaN and cause an error.\r\n    if (!isNaN(newStartTime)) newCaption.start = newStartTime;\r\n    if (!isNaN(newEndTime)) newCaption.end = newEndTime;\r\n\r\n    dispatch(modifySingleCaption(newCaption, subIndex));\r\n  };\r\n\r\n  const writeText = () => {\r\n    let newLines = subtitleText.split(\"\\n\");\r\n    let newCaption = { ...subData, lines: newLines };\r\n    dispatch(modifySingleCaption(newCaption, subIndex));\r\n  };\r\n\r\n  const timeKeyUp = (event) => {\r\n    if (event.key === \"Enter\") setNewTime();\r\n  };\r\n\r\n  const keyDown = (event) => {\r\n    const linesToString = subData.lines.join(\"\\n\");\r\n    if (event.key === \"Shift\") setShiftDown(true);\r\n    else if (!shiftDown && event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      const oldCaption = linesToString.substr(0, event.target.selectionStart).split(\"\\n\");\r\n      const newCaption = linesToString.substr(event.target.selectionStart).split(\"\\n\");\r\n      dispatch(addNewCaption(oldCaption, newCaption, subIndex));\r\n    } else if (event.key === \"Backspace\" && subtitleText === \"\") dispatch(deleteCaption(subIndex));\r\n  };\r\n  const keyUp = (event) => {\r\n    if (event.key === \"Shift\") setShiftDown(false);\r\n  };\r\n\r\n  return (\r\n    <Container ref={scrollTo}>\r\n      <Card\r\n        elevation={Elevation.ONE}\r\n        style={currentlySelected === subIndex ? { border: \"2px solid black\" } : {}}\r\n        onClick={() => {\r\n          dispatch(selectSub(subIndex));\r\n          dispatch(seeking(subData.start+0.0001));\r\n        }}\r\n      >\r\n        <TimeContainer>\r\n          <SubtitleNumber>{subIndex + 1}</SubtitleNumber>\r\n          <div className=\"subtime\">\r\n            <Icon icon={\"double-chevron-right\"} />\r\n            <input\r\n              value={startTime}\r\n              onKeyUp={timeKeyUp}\r\n              onChange={(e) => setStartTime(e.target.value)}\r\n              onBlur={setNewTime}\r\n            />\r\n          </div>\r\n          <div className=\"subtime\">\r\n            <Icon icon={\"double-chevron-left\"} />\r\n            <input\r\n              value={endTime}\r\n              onKeyUp={timeKeyUp}\r\n              onChange={(e) => setEndTime(e.target.value)}\r\n              onBlur={setNewTime}\r\n            />\r\n          </div>\r\n        </TimeContainer>\r\n        <InputContainer>\r\n          <textarea\r\n            onKeyDown={keyDown}\r\n            onKeyUp={keyUp}\r\n            type=\"text\"\r\n            onChange={(e) => setSubtitleText(e.target.value)}\r\n            onBlur={writeText}\r\n            value={subtitleText}\r\n          />\r\n        </InputContainer>\r\n        <CharactersContainer>\r\n          {charactersPerLine.map((num, i) => (\r\n            <div key={\"char\" + i}>{num}</div>\r\n          ))}\r\n        </CharactersContainer>\r\n        <Icon icon=\"trash\" onClick={() => openDeleteCaptionDialog(subIndex)} />\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SubtitleCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Dialog, Button } from \"@blueprintjs/core\";\r\nimport SubtitleCard from \"../Components/SubtitleCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteCaption } from \"../_Redux/Actions\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  min-width: 600px;\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  flex: 1;\r\n`;\r\nconst DialogContent = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n  button {\r\n    margin: 1em;\r\n  }\r\n`;\r\nfunction SubtitlesEditor() {\r\n  const dispatch = useDispatch();\r\n  const [deleteSubDialog, setDeleteSubDialog] = useState(false);\r\n  const [subtitleToDelete, setSubtitleToDelete] = useState(null);\r\n  const subtitles = useSelector((state) => state.data.present.subtitles);\r\n\r\n  const openDeleteCaptionDialog = (subIndex) => {\r\n    setSubtitleToDelete(subIndex);\r\n    setDeleteSubDialog(true);\r\n  };\r\n  return (\r\n    <Container>\r\n      {subtitles.map((subData, i) => (\r\n        <SubtitleCard\r\n          subIndex={i}\r\n          subData={subData}\r\n          key={\"sub\" + i}\r\n          openDeleteCaptionDialog={openDeleteCaptionDialog}\r\n        />\r\n      ))}\r\n\r\n      <Dialog\r\n        icon=\"info-sign\"\r\n        onClose={() => setDeleteSubDialog(false)}\r\n        title=\"Supprimer ce sous-titre\"\r\n        isOpen={deleteSubDialog}\r\n      >\r\n        <DialogContent>\r\n          <div>Êtes-vous sûr de vouloir supprimer ce sous-titre?</div>\r\n          <div>\r\n            <Button\r\n              intent=\"success\"\r\n              onClick={() => {\r\n                setDeleteSubDialog(false);\r\n                dispatch(deleteCaption(subtitleToDelete));\r\n              }}\r\n            >\r\n              Oui\r\n            </Button>\r\n            <Button intent=\"danger\" onClick={() => setDeleteSubDialog(false)}>\r\n              Non\r\n            </Button>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SubtitlesEditor;\r\n","function DefaultSegmentMarker(options) {\r\n\r\n  options.draggable = true;\r\n  this._options = options;\r\n}\r\n\r\nDefaultSegmentMarker.prototype.init = function (group) {\r\n\r\n  var handleWidth = 15;\r\n  var handleHeight = 30;\r\n  var handleX = this._options.startMarker ? 0 : -handleWidth; // Place in the middle of the marker\r\n\r\n  var xPosition = this._options.startMarker ? -24 : 24;\r\n\r\n  var time = this._options.startMarker\r\n    ? this._options.segment.startTime\r\n    : this._options.segment.endTime;\r\n\r\n  // Label - create with default y, the real value is set in fitToView().\r\n  this._label = new window.Konva.Text({\r\n    x: xPosition,\r\n    y: 0,\r\n    text: this._options.layer.formatTime(time),\r\n    fontFamily: this._options.fontFamily,\r\n    fontSize: this._options.fontSize,\r\n    fontStyle: this._options.fontStyle,\r\n    fill: \"#000\",\r\n    textAlign: \"center\",\r\n  });\r\n\r\n  this._label.hide();\r\n\r\n  // Handle - create with default y, the real value is set in fitToView().\r\n\r\n  this._handle = new window.Konva.Rect({\r\n    x: handleX,\r\n    y: 0,\r\n    width: handleWidth,\r\n    height: handleHeight,\r\n    fill: this._options.color,\r\n    stroke: this._options.color,\r\n    strokeWidth: 1,\r\n    // visible: this._options.segment.attributes.visibleMarkers,\r\n  });\r\n\r\n  //Caption\r\n  this._caption = new window.Konva.Text({\r\n    x: xPosition + 40,\r\n    y: 15,\r\n    text: this._options.segment._id + 1 + \": \" + this._options.segment.attributes.label,\r\n    fontFamily: this._options.fontFamily,\r\n    fontSize: this._options.fontSize,\r\n    fontStyle: this._options.fontStyle,\r\n    fill: \"#000\",\r\n    textAlign: \"left\",\r\n  });\r\n\r\n  // Vertical Line - create with default y and points, the real values\r\n  // are set in fitToView().\r\n  this._line = new window.Konva.Line({\r\n    x: 0,\r\n    y: 0,\r\n    stroke: this._options.color,\r\n    strokeWidth: 1,\r\n  });\r\n\r\n  group.add(this._label);\r\n  group.add(this._line);\r\n  group.add(this._handle);\r\n  if (this._options.startMarker) group.add(this._caption);\r\n\r\n  this.fitToView();\r\n  this.bindEventHandlers(group);\r\n};\r\n\r\nDefaultSegmentMarker.prototype.bindEventHandlers = function (group) {\r\n  var self = this;\r\n\r\n  // var xPosition = self._options.startMarker ? -24 : 24;\r\n\r\n  // if (self._options.draggable) {\r\n  //     group.on(\"dragstart\", function () {\r\n  //       if (self._options.startMarker) {\r\n  //         self._label.setX(xPosition - self._label.getWidth());\r\n  //       }\r\n\r\n  //       self._label.show();\r\n  //       self._options.layer.draw();\r\n  //     });\r\n\r\n  //   group.on(\"dragend\", function () {\r\n  //     self.resizeCaption();\r\n  //     self._label.hide();\r\n  //     self._options.layer.draw();\r\n  //   });\r\n  // }\r\n\r\n  // self._handle.on(\"mouseover\", function () {\r\n\r\n  //   // self._handle.show()\r\n  // });\r\n\r\n  // self._handle.on(\"mouseout\", function (e) {\r\n  //   let endMarker = self._options.layer._segmentShapes[self._options.segment._id].getEndMarker();\r\n  //   let startMarker = self._options.layer._segmentShapes[\r\n  //     self._options.segment._id\r\n  //   ].getStartMarker();\r\n\r\n  //   let mousePos = e.evt.layerX;\r\n\r\n  //   if (self._options.startMarker && mousePos < startMarker.getX()) {\r\n\r\n  //     self._handle.hide();\r\n  //     endMarker._marker._handle.hide();\r\n  //   } else if(!self._options.startMarker && mousePos > endMarker.getX()) {\r\n  //     startMarker._marker._handle.hide();\r\n  //     self._handle.hide();\r\n  //   }\r\n  //   self._options.layer.draw();\r\n  // });\r\n\r\n  setTimeout(() => {\r\n    self.resizeCaption();\r\n    defineBounds(self, group);\r\n    // defineMouseOver(self)\r\n  }, 50);\r\n};\r\n\r\n// function defineMouseOver(self,group){\r\n//   let segmentShape = self._options.layer._segmentShapes[self._options.segment._id]\r\n\r\n//   segmentShape._onMouseEnter = segmentShapeOnMouseEnter\r\n// }\r\n\r\n\r\nfunction newDragBoundFunc(self) {\r\n  return function (pos) {\r\n    self.resizeCaption();\r\n    let startMarker = self._options.layer._segmentShapes[\r\n      self._options.segment._id\r\n    ].getStartMarker();\r\n    let endMarker = self._options.layer._segmentShapes[self._options.segment._id].getEndMarker();\r\n\r\n    let rightNeighbour = self._options.layer._segmentShapes[self._options.segment._id + 1];\r\n\r\n    let bounds = { min: 0, max: 9999 };\r\n\r\n    if (self._options.startMarker) {\r\n      let leftNeighbour = self._options.layer._segmentShapes[self._options.segment._id - 1];\r\n      if (endMarker) bounds.max = endMarker.getX() - endMarker.getWidth();\r\n      if (leftNeighbour) {\r\n        bounds.min = leftNeighbour.getStartMarker().getX();\r\n\r\n        if (leftNeighbour.getEndMarker().getX() >= pos.x && pos.x > bounds.min) {\r\n          leftNeighbour.getEndMarker().setX(pos.x);\r\n\r\n          leftNeighbour._segment._setEndTime(\r\n            leftNeighbour._view.pixelsToTime(leftNeighbour._view.getFrameOffset() + pos.x)\r\n          );\r\n          leftNeighbour.getEndMarker()._marker.resizeCaption();\r\n        }\r\n      }\r\n    } else {\r\n      if (startMarker) bounds.min = startMarker.getX() + startMarker.getWidth();\r\n      if (rightNeighbour) {\r\n        bounds.max = rightNeighbour.getEndMarker().getX();\r\n\r\n        if (rightNeighbour.getStartMarker().getX() <= pos.x && pos.x < bounds.max) {\r\n          rightNeighbour.getStartMarker().setX(pos.x);\r\n          rightNeighbour._segment._setStartTime(\r\n            rightNeighbour._view.pixelsToTime(rightNeighbour._view.getFrameOffset() + pos.x)\r\n          );\r\n\r\n          rightNeighbour.getStartMarker()._marker.resizeCaption();\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      x: pos.x > bounds.max ? bounds.max : pos.x < bounds.min ? bounds.min : pos.x,\r\n      y: 0,\r\n    };\r\n  };\r\n}\r\n\r\nfunction defineBounds(self, group) {\r\n  group.attrs.dragBoundFunc = newDragBoundFunc(self);\r\n}\r\n\r\nDefaultSegmentMarker.prototype.resizeCaption = function () {\r\n  \r\n  const segmentShape = this._options.layer._segmentShapes[this._options.segment._id]\r\n\r\n  if(!segmentShape) return;\r\n  \r\n  let startMarker = segmentShape.getStartMarker();\r\n  let endMarker = segmentShape.getEndMarker();\r\n  let caption = startMarker._group.children[3];\r\n  if (caption) caption.setWidth(endMarker.getX() - startMarker.getX() - 30);\r\n  this._options.layer.draw();\r\n};\r\n\r\nDefaultSegmentMarker.prototype.fitToView = function () {\r\n  var height = this._options.layer.getHeight();\r\n\r\n  this._label.y(height / 2 - 5);\r\n  this._handle.y(height / 2 - 10.5);\r\n\r\n  this._line.points([0.5, 0, 0.5, height]);\r\n};\r\n\r\nDefaultSegmentMarker.prototype.timeUpdated = function (time) {\r\n  this._label.setText(this._options.layer.formatTime(time));\r\n};\r\n\r\nexport function createSegmentMarker(options) {\r\n  return new DefaultSegmentMarker(options);\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { modifySingleCaption, selectSub, modifyMultipleCaption } from \"../_Redux/Actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { Spinner } from \"@blueprintjs/core\";\r\nimport Peaks from \"peaks.js\";\r\nimport { createSegmentMarker } from \"../Utils/CustomSegmentMarker\";\r\n\r\nconst Container = styled.div`\r\n  height: 240px;\r\n  width: 100%;\r\n  .bp3-spinner {\r\n    position: absolute;\r\n    transform: translate(50vw, 50%);\r\n  }\r\n  .zoomview-container {\r\n    box-shadow: 3px 3px 20px #919191;\r\n    -moz-box-shadow: 3px 3px 20px #919191;\r\n    -webkit-box-shadow: 3px 3px 20px #919191;\r\n    margin: 5px 0;\r\n    line-height: 0;\r\n  }\r\n\r\n  .overview-container {\r\n    box-shadow: 3px 3px 20px #919191;\r\n    -moz-box-shadow: 3px 3px 20px #919191;\r\n    -webkit-box-shadow: 3px 3px 20px #919191;\r\n    line-height: 0;\r\n    height: 85px;\r\n  }\r\n`;\r\n\r\nconst SpinnerContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #ced9e0;\r\n  z-index: 100;\r\n  position: fixed;\r\n`;\r\n\r\nfunction Waveform() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [peaksReady, setPeaksReady] = useState(false);\r\n\r\n  const peaksUrl = useSelector((state) => state.data.present.peaksUrl);\r\n  const verticalZoom = useSelector((state) => state.media.verticalZoom);\r\n  const horizontalZoom = useSelector((state) => state.media.horizontalZoom);\r\n  const currentlySelected = useSelector((state) => state.data.present.currentlySelected);\r\n  const subtitles = useSelector((state) => state.data.present.subtitles);\r\n\r\n  const peaks = useRef();\r\n  const zoomviewWaveformRef = useRef();\r\n  const overviewWaveformRef = useRef();\r\n  const audioElementRef = useRef();\r\n  const subtitlesRef = useRef();\r\n  const currentlySelectedRef = useRef();\r\n\r\n\r\n  useEffect(\r\n    function initPeaksJs() {\r\n      if (peaksUrl) initPeaks();\r\n    },\r\n    [peaksUrl]\r\n  );\r\n\r\n  useEffect(\r\n    function incomingVerticalZoomChange() {\r\n      if (peaks.current) {\r\n        const zoomView = peaks.current.views.getView(\"zoomview\");\r\n        zoomView.setAmplitudeScale(verticalZoom);\r\n      }\r\n    },\r\n    [verticalZoom]\r\n  );\r\n\r\n  useEffect(\r\n    function incomingHorizontalZoomChange() {\r\n      if (peaks.current) {\r\n        peaks.current.zoom.setZoom(horizontalZoom);\r\n        peaks.current.segments.removeAll();\r\n        createSegmentsFromSubtitles()\r\n      }\r\n    },\r\n    [horizontalZoom]\r\n  );\r\n\r\n  useEffect(\r\n    function syncSubtitlesRefWithGlobalState() {\r\n      subtitlesRef.current = subtitles;\r\n    },\r\n    [subtitles]\r\n  );\r\n\r\n  useEffect(\r\n    function syncCurrentlySelectedRefWithGlobalState() {\r\n      currentlySelectedRef.current = currentlySelected;\r\n    },\r\n    [currentlySelected]\r\n  );\r\n\r\n  useEffect(\r\n    function syncSegmentsWithSubtitles() {\r\n      if (peaks.current) {\r\n        let allSegments = peaks.current.segments.getSegments();\r\n\r\n        if (allSegments.length !== subtitles.length) {\r\n          createSegmentsFromSubtitles();\r\n        } else {\r\n          subtitles.forEach((sub, i) => {\r\n     \r\n            let toUpgrade = null;\r\n            if (sub.start !== allSegments[i].startTime) toUpgrade = { startTime: sub.start };\r\n            else if (sub.end !== allSegments[i].endTime) toUpgrade = { endTime: sub.end };\r\n            else if (sub.lines.join(\"\\n\") !== allSegments[i].attributes.label) {\r\n              toUpgrade = { attributes: { label: sub.lines.join(\"\\n\") } };\r\n            }\r\n\r\n            if (toUpgrade) {\r\n              allSegments[i].update(toUpgrade);\r\n\r\n              \r\n\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    [subtitles]\r\n  );\r\n\r\n  const createSegmentsFromSubtitles = () => {\r\n    peaks.current.segments.removeAll();\r\n    peaks.current.segments.add(\r\n      subtitles.map((sub, index) => {\r\n        return {\r\n          startTime: sub.start,\r\n          endTime: sub.end,\r\n          editable: true,\r\n          id: index,\r\n          attributes: {\r\n            label: sub.lines.join(\"\\n\"),\r\n            visibleMarkers: false,\r\n          },\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const initPeaks = () => {\r\n    audioElementRef.current = document.querySelector(\".video-react-video\");\r\n\r\n    const options = {\r\n      containers: {\r\n        overview: overviewWaveformRef.current,\r\n        zoomview: zoomviewWaveformRef.current,\r\n      },\r\n      mediaElement: audioElementRef.current,\r\n      dataUri: {\r\n        arraybuffer: peaksUrl,\r\n      },\r\n      zoomLevels: [256, 512, 1024, 2048, 4096],\r\n      keyboard: true,\r\n      logger: console.error.bind(console),\r\n      randomizeSegmentColor: false,\r\n      zoomWaveformColor: \"#6a6a6a\",\r\n      segmentColor: \"#f8f8f8\",\r\n      segmentStartMarkerColor: \"#00ff11\",\r\n      segmentEndMarkerColor: \"#ff0000\",\r\n      overviewHighlightColor: 'blue',\r\n      emitCueEvents: true,\r\n      height: 150,\r\n    };\r\n\r\n    Peaks.init(options, (err, initializedPeaks) => {\r\n      if (err) console.error(\"err\", err);\r\n      peaks.current = initializedPeaks;\r\n\r\n      initializedPeaks.options.createSegmentMarker = createSegmentMarker;\r\n\r\n      initializedPeaks.on(\"segments.enter\", playheadEntersSegment);\r\n      initializedPeaks.on(\"segments.dragend\", segmentsDragEnd);\r\n      // initializedPeaks.on(\"segments.mouseenter\", (seg) => mouseOverSegment(seg, true));\r\n      // initializedPeaks.on(\"segments.mouseleave\", (seg) => mouseOverSegment(seg, false));\r\n\r\n      createSegmentsFromSubtitles();\r\n      setPeaksReady(true);\r\n    });\r\n  };\r\n\r\n  const segmentsDragEnd = (seg, isStartMarker) => {\r\n    let neighbourIndex = isStartMarker ? seg.id - 1 : seg.id + 1;\r\n\r\n    let neighbour = seg._peaks.segments._segmentsById[neighbourIndex];\r\n\r\n    let modifiedSubtitles = [];\r\n\r\n    if (neighbour) {\r\n      if (isStartMarker) {\r\n        if (neighbour.endTime < subtitlesRef.current[neighbourIndex].end) {\r\n          let newSubtitle = { ...subtitlesRef.current[neighbourIndex] };\r\n          newSubtitle.end = neighbour.endTime;\r\n          modifiedSubtitles.push({ newCaption: newSubtitle, index: neighbourIndex });\r\n        }\r\n      } else {\r\n        if (neighbour.startTime > subtitlesRef.current[neighbourIndex].start) {\r\n          let newSubtitle = { ...subtitlesRef.current[neighbourIndex] };\r\n\r\n          newSubtitle.start = neighbour.startTime;\r\n          modifiedSubtitles.push({ newCaption: newSubtitle, index: neighbourIndex });\r\n        }\r\n      }\r\n    }\r\n\r\n    let newSubtitle = { ...subtitlesRef.current[seg.id] };\r\n\r\n    newSubtitle.start = seg._startTime;\r\n    newSubtitle.end = seg.endTime;\r\n    modifiedSubtitles.push({ newCaption: newSubtitle, index: seg.id });\r\n\r\n    dispatch(modifyMultipleCaption(modifiedSubtitles));\r\n  };\r\n\r\n  const playheadEntersSegment = (segment) => {\r\n    if (segment.id !== currentlySelectedRef.current) dispatch(selectSub(segment.id));\r\n  };\r\n\r\n  const mouseOverSegment = (segment, enter) => {\r\n    if (segment.attributes.visibleMarkers !== enter)\r\n      segment.update({ attributes: { visibleMarkers: enter, label: segment.attributes.label } });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {!peaksReady && (\r\n        <SpinnerContainer>\r\n          <Spinner />\r\n        </SpinnerContainer>\r\n      )}\r\n      <div className=\"zoomview-container\" ref={zoomviewWaveformRef}></div>\r\n      <div className=\"overview-container\" ref={overviewWaveformRef}></div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Waveform;\r\n","import React from \"react\";\r\nimport Waveform from \"../Components/Waveform\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div`\r\n  background: #ced9e0;\r\n  width: 100%;\r\n\r\n  @media (min-width: 1040px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nfunction Timeline() {\r\n  return (\r\n    <Container>\r\n      <Waveform />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Timeline;\r\n","import React, { useState } from \"react\";\r\nimport { Navbar, Alignment, Button, Toaster, Toast } from \"@blueprintjs/core\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHotkeys } from \"react-hotkeys-hook\";\r\n\r\nconst Container = styled.div`\r\n  margin-bottom: 0.5em;\r\n  .bp3-navbar {\r\n    background-color: #293742;\r\n    color: white;\r\n  }\r\n  .bp3-button {\r\n    color: white;\r\n    border: 1px solid white;\r\n    margin: 0 5px;\r\n    span {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Titlebar() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const identifiant = useSelector((state) => state.data.present.ident);\r\n  const subtitles = useSelector((state) => state.data.present.subtitles);\r\n  const currentTime = useSelector((state)=>state.data.present.currentTime);\r\n\r\n  useHotkeys(\"ctrl+s\", (e) => {\r\n    e.preventDefault();\r\n    console.log(\"ctrl save\");\r\n    sendSubtitlesToAPI();\r\n  });\r\n  useHotkeys(\"command+s\", (e) => {\r\n    e.preventDefault();\r\n    console.log(\"save command\");\r\n    sendSubtitlesToAPI();\r\n  });\r\n\r\n  const sendSubtitlesToAPI = () => {\r\n    fetch(\"https://api.soustitreur.com/customer/save-srt\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"post\",\r\n      body: JSON.stringify({ ident: identifiant, subtitles }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((body) => {\r\n        console.log(body);\r\n      });\r\n  };\r\n\r\n  const shareCurrentTime = () => {\r\n    const url = window.location.href.split(\"&time=\")[0];\r\n    navigator.clipboard.writeText(`${url}&time=${currentTime}`)\r\n    setToasts([\r\n      <Toast\r\n        message=\"Le lien est maintenant dans le presse-papier\"\r\n        timeout={3000}\r\n        onDismiss={() => setToasts([])}\r\n        intent=\"primary\"\r\n      />,\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Navbar>\r\n        <Navbar.Group align={Alignment.LEFT}>\r\n          <Navbar.Heading>Sous-Titreur</Navbar.Heading>\r\n        </Navbar.Group>\r\n        <Navbar.Group align={Alignment.RIGHT}>\r\n          <Button outlined={true} icon=\"upload\" text=\"Partager\" onClick={shareCurrentTime} />\r\n          <Button\r\n            outlined={true}\r\n            icon=\"floppy-disk\"\r\n            text=\"Sauvegarder\"\r\n            onClick={sendSubtitlesToAPI}\r\n          />\r\n        </Navbar.Group>\r\n      </Navbar>\r\n      <Toaster>{toasts}</Toaster>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Titlebar;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Player, ControlBar } from \"video-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { currentTime } from \"../_Redux/Actions\";\r\nimport { useHotkeys } from \"react-hotkeys-hook\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 400px;\r\n  padding: 0 1em;\r\n  width: 100%;\r\n  @media (min-width: 1000px) {\r\n    max-width: 600px;\r\n  }\r\n`;\r\n\r\nfunction VideoPlayer({ playbackSpeed }) {\r\n  const dispatch = useDispatch();\r\n  const player = useRef();\r\n  const isPlaying = useRef();\r\n\r\n  const videoUrl = useSelector((state) => state.data.present.videoUrl);\r\n  const subtitles = useSelector((state) => state.data.present.subtitles);\r\n  const seekingTime = useSelector((state) => state.media.seekingTime);\r\n\r\n  useHotkeys(\"ctrl+space\", () => (isPlaying.current ? player.current.pause() : player.current.play()),{enableOnTags:[\"TEXTAREA\"]});\r\n\r\n  useEffect(() => {\r\n    player.current.subscribeToStateChange((state) => {\r\n      if (isPlaying.current !== !state.paused) isPlaying.current = !state.paused;\r\n      dispatch(currentTime(state.currentTime));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (player.current) {\r\n      let videoElement = player.current.video.video;\r\n\r\n      var i = 0;\r\n      for (let track of videoElement.textTracks) {\r\n        track.mode = \"disabled\";\r\n\r\n        i++;\r\n      }\r\n      const track = videoElement.addTextTrack(\"captions\");\r\n      track.mode = \"showing\";\r\n      subtitles.forEach((sub) => {\r\n        const cueEn = new VTTCue(sub.start, sub.end, sub.lines.join(\"\\n\"));\r\n        track.addCue(cueEn);\r\n      });\r\n    }\r\n  }, [subtitles]);\r\n\r\n  useEffect(() => {\r\n    if (seekingTime !== 0) player.current.seek(seekingTime);\r\n  }, [seekingTime]);\r\n\r\n  useEffect(() => {\r\n    player.current.playbackRate = playbackSpeed;\r\n  }, [playbackSpeed]);\r\n  return (\r\n    <Container>\r\n      <Player ref={player} aspectRatio=\"16:9\">\r\n        <source src={videoUrl} />\r\n        <ControlBar></ControlBar>\r\n      </Player>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default VideoPlayer;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport { ActionCreators } from 'redux-undo';\r\nimport styled from \"styled-components\";\r\nimport VideoPlayer from \"../Components/VideoPlayer\";\r\nimport { Label, Slider, Dialog, Button } from \"@blueprintjs/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectSub, verticalZoom, horizontalZoom } from \"../_Redux/Actions\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  flex: 1;\r\n`;\r\nconst VideoController = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 1em 0;\r\n\r\n  flex-wrap: wrap;\r\n\r\n  justify-content: space-around;\r\n\r\n  input{\r\n    margin-top: 6px;\r\n  }\r\n\r\n  .bp3-label{\r\n    margin-left: 5px;\r\n    margin-right: 5px;\r\n  }\r\n  .undo-redo {\r\n    display:flex;\r\n    flex-direction:column;\r\n    button{\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n`;\r\nconst Controls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nconst Shortcuts = styled.div`\r\n  display: flex;\r\n\r\n  padding: 1em;\r\n\r\n  justify-content: space-around;\r\n  .shortcut-label {\r\n    font-size: 10px;\r\n    border-bottom: 1px solid black;\r\n    text-align: center;\r\n  }\r\n  .shortcut-key {\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nfunction VideoSection() {\r\n  const dispatch = useDispatch();\r\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\r\n  const [verticalZoomSlider, setVerticalZoomSlider] = useState(0);\r\n  const [horizontalZoomSlider, setHorizontalZoomSlider] = useState(0);\r\n  const [shortcutListOpened, setShortcutListOpened] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [lastSearchedIndex, setLastSearchedIndex] = useState(-1);\r\n  const subtitles = useSelector((state) => state.data.present.subtitles);\r\n  const test = useSelector(state=>console.log(state))\r\n\r\n  useEffect(()=>{\r\n    dispatch(ActionCreators.clearHistory());\r\n  },[]);\r\n\r\n  const startSearch = () => {\r\n    let foundIndex;\r\n    subtitles.forEach((sub, i) => {\r\n      if (\r\n        !foundIndex &&\r\n        i > lastSearchedIndex &&\r\n        sub.lines.join(\"\\n\").toLowerCase().search(search.toLowerCase()) !== -1\r\n      ) {\r\n        foundIndex = i;\r\n        setLastSearchedIndex(i);\r\n      }\r\n    });\r\n    if (!foundIndex) setLastSearchedIndex(-1);\r\n    dispatch(selectSub(foundIndex));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <VideoPlayer playbackSpeed={playbackSpeed} />\r\n      <Controls>\r\n        <VideoController>\r\n          <Label className=\"undo-redo\">Défaire<Button icon=\"undo\" onClick={()=>{\r\n            console.log(\"undo aweille\")\r\n            dispatch(ActionCreators.undo())\r\n          }} /></Label>\r\n          <Label className=\"undo-redo\">Refaire<Button icon=\"redo\" onClick={()=>dispatch(ActionCreators.redo())} /></Label>\r\n          <Label>\r\n            Vitesse\r\n            <div class=\"bp3-select .modifier\">\r\n              <select onChange={(e) => setPlaybackSpeed(e.target.value)}>\r\n                <option value={0.5}>0.5x</option>\r\n                <option selected value={1}>\r\n                  1x\r\n                </option>\r\n                <option value={1.5}>1.5x</option>\r\n              </select>\r\n            </div>\r\n          </Label>\r\n          <div>\r\n            <Label>\r\n              Recherche\r\n              <div />\r\n              <input\r\n                value={search}\r\n                onChange={(e) => {\r\n                  setSearch(e.target.value);\r\n                  setLastSearchedIndex(-1);\r\n                }}\r\n                onKeyUp={(e) => (e.key === \"Enter\" ? startSearch() : null)}\r\n              />\r\n            </Label>\r\n          </div>\r\n\r\n          <Label>\r\n            Zoom Vertical\r\n            <Slider\r\n              min={0}\r\n              max={4}\r\n              labelValues={[]}\r\n              stepSize={1}\r\n              onRelease={(newValue) => dispatch(verticalZoom(newValue + 1))}\r\n              onChange={(newValue) => setVerticalZoomSlider(newValue)}\r\n              value={verticalZoomSlider}\r\n            />\r\n          </Label>\r\n          <Label>\r\n            Zoom Horizontal\r\n            <Slider\r\n              min={0}\r\n              max={4}\r\n              labelValues={[]}\r\n              stepSize={1}\r\n              onRelease={(newValue) => dispatch(horizontalZoom(newValue))}\r\n              onChange={(newValue) => setHorizontalZoomSlider(newValue)}\r\n              value={horizontalZoomSlider}\r\n            />\r\n          </Label>\r\n        </VideoController>\r\n        <Shortcuts>\r\n          <div>\r\n            {\" \"}\r\n            <div className=\"shortcut-label\">Jouer/Pauser la vidéo</div>\r\n            <div className=\"shortcut-key\">CTRL + Espace</div>\r\n          </div>\r\n\r\n          <div>\r\n            <div className=\"shortcut-label\">Bouger la chronologie globale de gauche à droite</div>\r\n            <div className=\"shortcut-key\">Flèches gauche et droite</div>\r\n          </div>\r\n        </Shortcuts>\r\n      </Controls>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default VideoSection;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { requestData, receiveData, seeking } from \"./_Redux/Actions\";\r\nimport \"./App.css\";\r\nimport styled from \"styled-components\";\r\nimport SubtitlesEditor from \"./Sections/SubtitlesEditor\";\r\nimport Timeline from \"./Sections/Timeline\";\r\nimport Titlebar from \"./Components/Titlebar\";\r\nimport VideoSection from \"./Sections/VideoSection\";\r\n\r\nconst Container = styled.div`\r\n  \r\n`;\r\nconst TopSections = styled.div`\r\n  display: flex;\r\n\r\n  height: calc(100vh - 303px);\r\n\r\n  align-items: center;\r\n  flex-direction: row;\r\n\r\n  align-items: flex-start;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const splittedUrl = window.location.href.split(\"/\")\r\n    const ident = splittedUrl[splittedUrl.length-1]\r\n    console.log(\"ident: \",ident)\r\n    //606ca3a09e5c2079835619_6551\r\n    dispatch(requestData());\r\n    fetch(\"https://api.soustitreur.com/customer/get-srt\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"post\",\r\n      body: JSON.stringify({ ident }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((body) => {\r\n        console.log(\"body\",body)\r\n        dispatch(receiveData({ ...body.data,ident }));\r\n        if(window.location.href.includes(\"&time=\")){\r\n          const splittedUrl = window.location.href.split(\"&time=\");\r\n          const time = Number(splittedUrl[1])\r\n          dispatch(seeking(time));\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Titlebar />\r\n      <TopSections>\r\n        {\" \"}\r\n        <SubtitlesEditor />\r\n        <VideoSection />\r\n      </TopSections>\r\n\r\n      <Timeline />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import undoable,{excludeAction } from 'redux-undo';\r\nimport data from \"./data\";\r\nimport media from \"./media\";\r\n\r\n\r\nimport { combineReducers } from \"redux\";\r\nexport default combineReducers({\r\n  data:undoable(data, {\r\n    limit: 10,\r\n    filter:excludeAction([\"CURRENT_TIME\",\"CURRENTLY_SELECTED\"])\r\n  }),\r\n  media,\r\n\r\n});\r\n","import {\r\n  DATA_REQUEST,\r\n  DATA_SUCCESS,\r\n  MODIFY_SINGLE_CAPTION,\r\n  ADD_NEW_CAPTION,\r\n  DELETE_CAPTION,\r\n  CURRENTLY_SELECTED,\r\n  MODIFY_MULTIPLE_CAPTIONS,\r\n  CURRENT_TIME,\r\n  currentTime\r\n} from \"../Actions\";\r\n\r\nexport default (\r\n  state = {\r\n    isFetching: false,\r\n    ident:\"\",\r\n    peaksUrl: null,\r\n    videoUrl: null,\r\n    subtitles: [],\r\n    vttFile: null,\r\n    currentlySelected: null,\r\n    currentTime:0,\r\n    waveformData:[]\r\n  },\r\n  action\r\n) => {\r\n  console.log(\"action.type\",action.type)\r\n  switch (action.type) {\r\n    case DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n    case DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        peaksUrl: action.data.waveform,\r\n        videoUrl: action.data.videolink,\r\n        subtitles: action.data.subtitles,\r\n        ident: action.data.ident,\r\n        waveformData: action.data.waveformobj\r\n      };\r\n    case MODIFY_SINGLE_CAPTION: {\r\n      let newSubtitles = [...state.subtitles];\r\n      newSubtitles[action.subIndex] = action.newCaption;\r\n      return { ...state, subtitles: newSubtitles };\r\n    }\r\n\r\n    case MODIFY_MULTIPLE_CAPTIONS: {\r\n      let newSubtitles = [...state.subtitles];\r\n      action.newCaptions.forEach((cap) => {\r\n        newSubtitles[cap.index] = cap.newCaption;\r\n      });\r\n      return { ...state, subtitles: newSubtitles };\r\n    }\r\n\r\n    case ADD_NEW_CAPTION: {\r\n      let newSubtitles = [...state.subtitles];\r\n      const originalSubStartTime = newSubtitles[action.subIndex].start\r\n      const originalSubEndTime = newSubtitles[action.subIndex].end\r\n      \r\n      let splitTime = 0;\r\n      if(state.currentTime > originalSubStartTime && state.currentTime < originalSubEndTime) splitTime = state.currentTime\r\n      else splitTime = (originalSubEndTime - originalSubStartTime) / 2 + originalSubStartTime\r\n      \r\n      let oldSub = {\r\n        start: newSubtitles[action.subIndex].start,\r\n        end:splitTime,\r\n        lines: action.oldCaption,\r\n      };\r\n\r\n      let newSub = {\r\n        start:splitTime,\r\n        end: originalSubEndTime,\r\n        lines: action.newCaption,\r\n      };\r\n\r\n      newSubtitles[action.subIndex] = oldSub;\r\n      newSubtitles.splice(action.subIndex + 1, 0, newSub);\r\n\r\n      return { ...state, subtitles: newSubtitles };\r\n    }\r\n\r\n    case DELETE_CAPTION: {\r\n      let newSubtitles = state.subtitles.filter((sub, i) => i !== action.subIndex);\r\n\r\n      return { ...state, subtitles: newSubtitles };\r\n    }\r\n\r\n    case CURRENTLY_SELECTED:\r\n      return {\r\n        ...state,\r\n        currentlySelected: action.subIndex,\r\n      };\r\n      case CURRENT_TIME:\r\n        return {\r\n          ...state,\r\n          currentTime: action.time,\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { PLAY_PAUSE, SEEKING, VERTICAL_ZOOM, HORIZONTAL_ZOOM, CURRENT_TIME } from \"../Actions\";\r\n\r\nexport default (\r\n  state = {\r\n    seekingTime: 0,\r\n    horizontalZoom: 0,\r\n    verticalZoom: 0,\r\n    currentTime: 0,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SEEKING:\r\n      return {\r\n        ...state,\r\n        seekingTime: action.seekingTime,\r\n      };\r\n    case VERTICAL_ZOOM:\r\n      return {\r\n        ...state,\r\n        verticalZoom: action.newZoom,\r\n      };\r\n    case HORIZONTAL_ZOOM:\r\n      return {\r\n        ...state,\r\n        horizontalZoom: action.newZoom,\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./Reducers/index.js\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(rootReducer, undefined, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./_Redux/store\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"../node_modules/video-react/dist/video-react.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}